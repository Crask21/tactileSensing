[08/11 17:01:37] vclr INFO: Full config saved to ./video-contrastive-learning/results_gs\config.json
[08/11 17:01:37] vclr INFO: length of training dataset: 240
[08/11 17:01:39] vclr INFO: ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer2): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer3): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer4): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc_inter): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
  (fc_intra): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
  (fc_order): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
  (fc_order_classifier): Linear(in_features=768, out_features=4, bias=True)
  (fc_tsn): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
)
[08/11 17:01:39] vclr INFO: Training
[08/11 17:02:48] vclr INFO: Full config saved to ./video-contrastive-learning/results_gs\config.json
[08/11 17:02:48] vclr INFO: length of training dataset: 240
[08/11 17:02:49] vclr INFO: ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer2): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer3): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (layer4): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc_inter): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
  (fc_intra): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
  (fc_order): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
  (fc_order_classifier): Linear(in_features=768, out_features=4, bias=True)
  (fc_tsn): Head(
    (0): Linear(in_features=2048, out_features=2048, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=2048, out_features=128, bias=True)
  )
)
[08/11 17:02:49] vclr INFO: Training
[08/11 17:06:24] vclr INFO: Train: [  1]/[   0/  15] BT=214.957/214.957 Loss=14.712 7.299 1.452 1.376 4.585/14.712
[08/11 17:06:59] vclr INFO: Train: [  1]/[  10/  15] BT=249.399/233.522 Loss=12.244 5.425 0.817 1.377 4.625/12.181
[08/11 17:07:17] vclr INFO: epoch 1, total time 267.10, loss=12.390610567728679
[08/11 17:07:17] vclr INFO: ==> Saving...
[08/11 17:08:31] vclr INFO: Train: [  2]/[   0/  15] BT=65.771/65.771 Loss=13.479 6.069 0.704 1.522 5.184/13.479
[08/11 17:21:04] seco INFO: Full config saved to ./video-contrastive-learning/results_gs\config.json
[08/11 17:21:04] seco INFO: using data: 240
[08/11 17:21:09] seco INFO: model init done
[08/11 17:21:41] seco INFO: 0/240
[08/11 17:21:46] seco INFO: 1/240
[08/11 17:21:46] seco INFO: 2/240
[08/11 17:21:46] seco INFO: 3/240
[08/11 17:21:46] seco INFO: 4/240
[08/11 17:21:46] seco INFO: 5/240
[08/11 17:21:46] seco INFO: 6/240
[08/11 17:21:46] seco INFO: 7/240
[08/11 17:21:46] seco INFO: 8/240
[08/11 17:21:46] seco INFO: 9/240
[08/11 17:21:46] seco INFO: 10/240
[08/11 17:21:46] seco INFO: 11/240
[08/11 17:21:46] seco INFO: 12/240
[08/11 17:21:47] seco INFO: 13/240
[08/11 17:21:47] seco INFO: 14/240
[08/11 17:21:47] seco INFO: 15/240
[08/11 17:21:47] seco INFO: 16/240
[08/11 17:21:47] seco INFO: 17/240
[08/11 17:21:47] seco INFO: 18/240
[08/11 17:21:48] seco INFO: 19/240
[08/11 17:21:48] seco INFO: 20/240
[08/11 17:21:48] seco INFO: 21/240
[08/11 17:21:49] seco INFO: 22/240
[08/11 17:21:49] seco INFO: 23/240
[08/11 17:21:49] seco INFO: 24/240
[08/11 17:21:49] seco INFO: 25/240
[08/11 17:21:50] seco INFO: 26/240
[08/11 17:21:51] seco INFO: 27/240
[08/11 17:21:51] seco INFO: 28/240
[08/11 17:21:51] seco INFO: 29/240
[08/11 17:21:51] seco INFO: 30/240
[08/11 17:21:51] seco INFO: 31/240
[08/11 17:21:51] seco INFO: 32/240
[08/11 17:21:51] seco INFO: 33/240
[08/11 17:21:53] seco INFO: 34/240
[08/11 17:21:53] seco INFO: 35/240
[08/11 17:21:53] seco INFO: 36/240
[08/11 17:21:53] seco INFO: 37/240
[08/11 17:21:53] seco INFO: 38/240
[08/11 17:21:54] seco INFO: 39/240
[08/11 17:21:54] seco INFO: 40/240
[08/11 17:21:54] seco INFO: 41/240
[08/11 17:21:55] seco INFO: 42/240
[08/11 17:21:55] seco INFO: 43/240
[08/11 17:21:55] seco INFO: 44/240
[08/11 17:21:55] seco INFO: 45/240
[08/11 17:21:55] seco INFO: 46/240
[08/11 17:21:55] seco INFO: 47/240
[08/11 17:21:55] seco INFO: 48/240
[08/11 17:21:55] seco INFO: 49/240
[08/11 17:22:00] seco INFO: Full config saved to ./video-contrastive-learning/results_gs\config.json
[08/11 17:22:00] seco INFO: using data: 40
[08/11 17:22:01] seco INFO: model init done
[08/11 17:22:08] seco INFO: 0/40
[08/11 17:22:10] seco INFO: 1/40
[08/11 17:22:10] seco INFO: 2/40
[08/11 17:22:10] seco INFO: 3/40
[08/11 17:22:10] seco INFO: 4/40
[08/11 17:22:10] seco INFO: 5/40
[08/11 17:22:10] seco INFO: 6/40
[08/11 17:22:10] seco INFO: 7/40
[08/11 17:22:10] seco INFO: 8/40
[08/11 17:22:10] seco INFO: 9/40
[08/11 17:22:11] seco INFO: 10/40
[08/11 17:22:11] seco INFO: 11/40
[08/11 17:22:12] seco INFO: 12/40
[08/11 17:22:12] seco INFO: 13/40
[08/11 17:22:13] seco INFO: 14/40
[08/11 17:22:13] seco INFO: 15/40
[08/11 17:22:13] seco INFO: 16/40
[08/11 17:22:13] seco INFO: 17/40
[08/11 17:22:13] seco INFO: 18/40
[08/11 17:22:13] seco INFO: 19/40
[08/11 17:23:11] seco INFO: Full config saved to ./video-contrastive-learning/results_gs\config.json
[08/11 17:23:12] seco INFO: using data: 200
[08/11 17:23:12] seco INFO: model init done
[08/11 17:23:42] seco INFO: 0/200
[08/11 17:23:43] seco INFO: 1/200
[08/11 17:23:43] seco INFO: 2/200
[08/11 17:23:43] seco INFO: 3/200
[08/11 17:23:43] seco INFO: 4/200
[08/11 17:23:44] seco INFO: 5/200
[08/11 17:23:44] seco INFO: 6/200
[08/11 17:23:44] seco INFO: 7/200
[08/11 17:23:44] seco INFO: 8/200
[08/11 17:23:44] seco INFO: 9/200
[08/11 17:23:44] seco INFO: 10/200
[08/11 17:23:44] seco INFO: 11/200
[08/11 17:23:44] seco INFO: 12/200
[08/11 17:23:44] seco INFO: 13/200
[08/11 17:23:44] seco INFO: 14/200
[08/11 17:23:44] seco INFO: 15/200
[08/11 17:23:44] seco INFO: 16/200
[08/11 17:23:44] seco INFO: 17/200
[08/11 17:23:44] seco INFO: 18/200
[08/11 17:23:44] seco INFO: 19/200
[08/11 17:23:45] seco INFO: 20/200
[08/11 17:23:45] seco INFO: 21/200
[08/11 17:23:45] seco INFO: 22/200
[08/11 17:23:45] seco INFO: 23/200
[08/11 17:23:45] seco INFO: 24/200
[08/11 17:23:45] seco INFO: 25/200
[08/11 17:23:45] seco INFO: 26/200
[08/11 17:23:45] seco INFO: 27/200
[08/11 17:23:45] seco INFO: 28/200
[08/11 17:23:45] seco INFO: 29/200
[08/11 17:23:45] seco INFO: 30/200
[08/11 17:23:45] seco INFO: 31/200
[08/11 17:23:45] seco INFO: 32/200
[08/11 17:23:45] seco INFO: 33/200
[08/11 17:23:45] seco INFO: 34/200
[08/11 17:23:46] seco INFO: 35/200
[08/11 17:23:46] seco INFO: 36/200
[08/11 17:23:46] seco INFO: 37/200
[08/11 17:23:46] seco INFO: 38/200
[08/11 17:23:46] seco INFO: 39/200
[08/11 17:23:46] seco INFO: 40/200
[08/11 17:23:46] seco INFO: 41/200
[08/11 17:23:46] seco INFO: 42/200
[08/11 17:23:46] seco INFO: 43/200
[08/11 17:23:46] seco INFO: 44/200
[08/11 17:23:46] seco INFO: 45/200
[08/11 17:23:46] seco INFO: 46/200
[08/11 17:23:46] seco INFO: 47/200
[08/11 17:23:46] seco INFO: 48/200
[08/11 17:23:47] seco INFO: 49/200
[08/11 17:23:47] seco INFO: 50/200
[08/11 17:23:47] seco INFO: 51/200
[08/11 17:23:47] seco INFO: 52/200
[08/11 17:23:47] seco INFO: 53/200
[08/11 17:23:47] seco INFO: 54/200
[08/11 17:23:47] seco INFO: 55/200
[08/11 17:23:48] seco INFO: 56/200
[08/11 17:23:48] seco INFO: 57/200
[08/11 17:23:48] seco INFO: 58/200
[08/11 17:23:48] seco INFO: 59/200
[08/11 17:23:49] seco INFO: 60/200
[08/11 17:23:49] seco INFO: 61/200
[08/11 17:23:49] seco INFO: 62/200
[08/11 17:23:49] seco INFO: 63/200
[08/11 17:23:50] seco INFO: 64/200
[08/11 17:23:50] seco INFO: 65/200
[08/11 17:23:50] seco INFO: 66/200
[08/11 17:23:50] seco INFO: 67/200
[08/11 17:23:51] seco INFO: 68/200
[08/11 17:23:51] seco INFO: 69/200
[08/11 17:23:51] seco INFO: 70/200
[08/11 17:23:51] seco INFO: 71/200
[08/11 17:23:52] seco INFO: 72/200
[08/11 17:23:52] seco INFO: 73/200
[08/11 17:23:52] seco INFO: 74/200
[08/11 17:23:52] seco INFO: 75/200
[08/11 17:23:52] seco INFO: 76/200
[08/11 17:23:53] seco INFO: 77/200
[08/11 17:23:53] seco INFO: 78/200
[08/11 17:23:53] seco INFO: 79/200
[08/11 17:23:54] seco INFO: 80/200
[08/11 17:23:55] seco INFO: 81/200
[08/11 17:23:55] seco INFO: 82/200
[08/11 17:23:55] seco INFO: 83/200
[08/11 17:23:55] seco INFO: 84/200
[08/11 17:23:55] seco INFO: 85/200
[08/11 17:23:55] seco INFO: 86/200
[08/11 17:23:56] seco INFO: 87/200
[08/11 17:23:56] seco INFO: 88/200
[08/11 17:23:57] seco INFO: 89/200
[08/11 17:23:57] seco INFO: 90/200
[08/11 17:23:57] seco INFO: 91/200
[08/11 17:23:57] seco INFO: 92/200
[08/11 17:23:57] seco INFO: 93/200
[08/11 17:23:57] seco INFO: 94/200
[08/11 17:23:57] seco INFO: 95/200
[08/11 17:23:58] seco INFO: 96/200
[08/11 17:23:58] seco INFO: 97/200
[08/11 17:23:58] seco INFO: 98/200
[08/11 17:23:59] seco INFO: 99/200
[08/11 17:23:59] seco INFO: 100/200
[08/11 17:23:59] seco INFO: 101/200
[08/11 17:23:59] seco INFO: 102/200
[08/11 17:23:59] seco INFO: 103/200
[08/11 17:24:00] seco INFO: 104/200
[08/11 17:24:00] seco INFO: 105/200
[08/11 17:24:00] seco INFO: 106/200
[08/11 17:24:01] seco INFO: 107/200
[08/11 17:24:01] seco INFO: 108/200
[08/11 17:24:01] seco INFO: 109/200
[08/11 17:24:01] seco INFO: 110/200
[08/11 17:24:01] seco INFO: 111/200
[08/11 17:24:02] seco INFO: 112/200
[08/11 17:24:02] seco INFO: 113/200
[08/11 17:24:02] seco INFO: 114/200
[08/11 17:24:03] seco INFO: 115/200
[08/11 17:24:04] seco INFO: 116/200
[08/11 17:24:04] seco INFO: 117/200
[08/11 17:24:04] seco INFO: 118/200
[08/11 17:24:04] seco INFO: 119/200
[08/11 17:24:04] seco INFO: 120/200
[08/11 17:24:04] seco INFO: 121/200
[08/11 17:24:05] seco INFO: 122/200
[08/11 17:24:05] seco INFO: 123/200
[08/11 17:24:05] seco INFO: 124/200
[08/11 17:24:05] seco INFO: 125/200
[08/11 17:24:05] seco INFO: 126/200
[08/11 17:24:06] seco INFO: 127/200
[08/11 17:24:06] seco INFO: 128/200
[08/11 17:24:06] seco INFO: 129/200
[08/11 17:24:06] seco INFO: 130/200
[08/11 17:24:09] seco INFO: 131/200
[08/11 17:24:10] seco INFO: 132/200
[08/11 17:24:10] seco INFO: 133/200
[08/11 17:24:10] seco INFO: 134/200
[08/11 17:24:10] seco INFO: 135/200
[08/11 17:24:10] seco INFO: 136/200
[08/11 17:24:10] seco INFO: 137/200
[08/11 17:24:10] seco INFO: 138/200
[08/11 17:24:11] seco INFO: 139/200
[08/11 17:24:11] seco INFO: 140/200
[08/11 17:24:12] seco INFO: 141/200
[08/11 17:24:12] seco INFO: 142/200
[08/11 17:24:12] seco INFO: 143/200
[08/11 17:24:12] seco INFO: 144/200
[08/11 17:24:12] seco INFO: 145/200
[08/11 17:24:12] seco INFO: 146/200
[08/11 17:24:13] seco INFO: 147/200
[08/11 17:24:13] seco INFO: 148/200
[08/11 17:24:13] seco INFO: 149/200
[08/11 17:24:13] seco INFO: 150/200
[08/11 17:24:13] seco INFO: 151/200
[08/11 17:24:13] seco INFO: 152/200
[08/11 17:24:13] seco INFO: 153/200
[08/11 17:24:13] seco INFO: 154/200
[08/11 17:24:14] seco INFO: 155/200
[08/11 17:24:14] seco INFO: 156/200
[08/11 17:24:15] seco INFO: 157/200
[08/11 17:24:15] seco INFO: 158/200
[08/11 17:24:15] seco INFO: 159/200
[08/11 17:24:15] seco INFO: 160/200
[08/11 17:24:15] seco INFO: 161/200
[08/11 17:24:15] seco INFO: 162/200
[08/11 17:24:16] seco INFO: 163/200
[08/11 17:24:16] seco INFO: 164/200
[08/11 17:24:17] seco INFO: 165/200
[08/11 17:24:17] seco INFO: 166/200
[08/11 17:24:17] seco INFO: 167/200
[08/11 17:24:17] seco INFO: 168/200
[08/11 17:24:17] seco INFO: 169/200
[08/11 17:24:17] seco INFO: 170/200
[08/11 17:24:19] seco INFO: 171/200
[08/11 17:24:19] seco INFO: 172/200
[08/11 17:24:19] seco INFO: 173/200
[08/11 17:24:19] seco INFO: 174/200
[08/11 17:24:19] seco INFO: 175/200
[08/11 17:24:19] seco INFO: 176/200
[08/11 17:24:19] seco INFO: 177/200
[08/11 17:24:19] seco INFO: 178/200
[08/11 17:24:20] seco INFO: 179/200
[08/11 17:24:20] seco INFO: 180/200
[08/11 17:24:20] seco INFO: 181/200
[08/11 17:24:21] seco INFO: 182/200
[08/11 17:24:21] seco INFO: 183/200
[08/11 17:24:21] seco INFO: 184/200
[08/11 17:24:21] seco INFO: 185/200
[08/11 17:24:21] seco INFO: 186/200
[08/11 17:24:22] seco INFO: 187/200
[08/11 17:24:22] seco INFO: 188/200
[08/11 17:24:22] seco INFO: 189/200
[08/11 17:24:22] seco INFO: 190/200
[08/11 17:24:22] seco INFO: 191/200
[08/11 17:24:22] seco INFO: 192/200
[08/11 17:24:22] seco INFO: 193/200
[08/11 17:24:22] seco INFO: 194/200
[08/11 17:24:23] seco INFO: 195/200
[08/11 17:24:23] seco INFO: 196/200
[08/11 17:24:23] seco INFO: 197/200
[08/11 17:24:23] seco INFO: 198/200
[08/11 17:24:23] seco INFO: 199/200
[08/11 17:24:29] seco INFO: Full config saved to ./video-contrastive-learning/results_gs\config.json
[08/11 17:24:29] seco INFO: using data: 40
[08/11 17:24:30] seco INFO: model init done
[08/11 17:24:36] seco INFO: 0/40
[08/11 17:24:38] seco INFO: 1/40
[08/11 17:24:38] seco INFO: 2/40
[08/11 17:24:38] seco INFO: 3/40
[08/11 17:24:38] seco INFO: 4/40
[08/11 17:24:38] seco INFO: 5/40
[08/11 17:24:38] seco INFO: 6/40
[08/11 17:24:38] seco INFO: 7/40
[08/11 17:24:38] seco INFO: 8/40
[08/11 17:24:38] seco INFO: 9/40
[08/11 17:24:38] seco INFO: 10/40
[08/11 17:24:38] seco INFO: 11/40
[08/11 17:24:38] seco INFO: 12/40
[08/11 17:24:38] seco INFO: 13/40
[08/11 17:24:38] seco INFO: 14/40
[08/11 17:24:38] seco INFO: 15/40
[08/11 17:24:39] seco INFO: 16/40
[08/11 17:24:39] seco INFO: 17/40
[08/11 17:24:39] seco INFO: 18/40
[08/11 17:24:39] seco INFO: 19/40
[08/11 17:24:39] seco INFO: 20/40
[08/11 17:24:39] seco INFO: 21/40
[08/11 17:24:39] seco INFO: 22/40
[08/11 17:24:39] seco INFO: 23/40
[08/11 17:24:39] seco INFO: 24/40
[08/11 17:24:40] seco INFO: 25/40
[08/11 17:24:40] seco INFO: 26/40
[08/11 17:24:40] seco INFO: 27/40
[08/11 17:24:40] seco INFO: 28/40
[08/11 17:24:41] seco INFO: 29/40
[08/11 17:24:41] seco INFO: 30/40
[08/11 17:24:41] seco INFO: 31/40
[08/11 17:24:41] seco INFO: 32/40
[08/11 17:24:42] seco INFO: 33/40
[08/11 17:24:42] seco INFO: 34/40
[08/11 17:24:42] seco INFO: 35/40
[08/11 17:24:42] seco INFO: 36/40
[08/11 17:24:42] seco INFO: 37/40
[08/11 17:24:42] seco INFO: 38/40
[08/11 17:24:42] seco INFO: 39/40
